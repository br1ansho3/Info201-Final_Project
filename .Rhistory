shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
a <- data.frame(c(1,1,1), c(2,2,2))
b <- data.frame(c(3,3,3), c(4,4,4))
c <- rbind(a,b)
a <- data.frame(c(a,b,c), c(2,2,2))
b <- data.frame(c(a,b,c), c(4,4,4))
a <- data.frame(c(x,y,z), c(2,2,2))
b <- data.frame(c(x,y,z), c(4,4,4))
a <- data.frame(c("x","y","z"), c(2,2,2))
b <- data.frame(c("x","y","z"), c(4,4,4))
c <- rbind(a,b)
a <- data.frame(c("x","y","z"), c(2,2,2))
b <- data.frame(c("x","y","z"), c(4,4,4))
c <- rbind(a,b, c("x","y","z"))
View(a)
View(b)
c <- rbind(a,b, c("x","y","z"))
a <- data.frame(name = c("x","y","z"), value = c(2,2,2))
b <- data.frame(name = c("x","y","z"), value = c(4,4,4))
c <- rbind(a,b, name)
b <- data.frame(name = c("x","y","z"), value = c(4,4,4))
c <- bind_column(a,b, name)
library(dplyr)
a <- data.frame(name = c("x","y","z"), value = c(2,2,2))
b <- data.frame(name = c("x","y","z"), value = c(4,4,4))
c <- bind_column(a,b, name)
a <- data.frame(name = c("x","y","z"), value = c(2,2,2))
b <- data.frame(name = c("x","y","z"), value = c(4,4,4))
c <- bind_cols(a,b, name)
a <- data.frame(name = c("x","y","z"), value = c(2,2,2))
b <- data.frame(name = c("x","y","z"), value = c(4,4,4))
c <- bind_cols(a,b)
View(c)
b <- data.frame(name = c("x","y","z"), value = c(4,4,4))
c <- bind_rows(a,b)
runApp()
c <- bind_rows(a,b)
d <- aggregate(cbind(Value) ~ name, data=c, FUN=sum)
c <- bind_rows(a,b)
d <- aggregate(cbind(value) ~ name, data=c, FUN=sum)
View(d)
nutrition_table <- function(dish){
nutrition_response <- GET(endpoint,
add_headers("X-RapidAPI-Key" = recipe_key),
query = list(title = dish) )
nutrition_response_text <- content(nutrition_response, type = "text", encoding = "ISO-8859-1")
nutrition_response_data <- fromJSON(nutrition_response_text)
calories <- nutrition_response_data$calories$value
fat <- nutrition_response_data$fat$value
protein <- nutrition_response_data$protein$value
carbs <- nutrition_response_data$carbs$value
nutrition_list <- c(calories,fat,protein,carbs)
nutrition_table <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = nutrition_list)
return(nutrition_table)
a<- nutrition_table("Spaghetti")
nutrition_table <- function(dish){
nutrition_response <- GET(endpoint,
add_headers("X-RapidAPI-Key" = recipe_key),
query = list(title = dish) )
nutrition_response_text <- content(nutrition_response, type = "text", encoding = "ISO-8859-1")
nutrition_response_data <- fromJSON(nutrition_response_text)
calories <- nutrition_response_data$calories$value
fat <- nutrition_response_data$fat$value
protein <- nutrition_response_data$protein$value
carbs <- nutrition_response_data$carbs$value
nutrition_list <- c(calories,fat,protein,carbs)
nutrition_table <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = nutrition_list)
return(nutrition_table)}
a<- nutrition_table("Spaghetti")
dd
stop()
dasdfk;dj
nutrition_table <- function(dish){
nutrition_response <- GET(endpoint,
add_headers("X-RapidAPI-Key" = recipe_key),
query = list(title = dish) )
nutrition_response_text <- content(nutrition_response, type = "text", encoding = "ISO-8859-1")
nutrition_response_data <- fromJSON(nutrition_response_text)
calories <- nutrition_response_data$calories$value
fat <- nutrition_response_data$fat$value
protein <- nutrition_response_data$protein$value
carbs <- nutrition_response_data$carbs$value
nutrition_list <- c(calories,fat,protein,carbs)
nutrition_table <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = nutrition_list)
return(nutrition_table)}
a<- nutrition_table("Spaghetti")
recipe_uri <- "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/"
recipe_endpoint <- "findByIngredients"
nutrition_action <- "guessNutrition"
nutrition_endpoint <- paste0(recipe_uri,nutrition_action)
nutrition_table <- function(dish){
nutrition_response <- GET(endpoint,
add_headers("X-RapidAPI-Key" = recipe_key),
query = list(title = dish) )
nutrition_response_text <- content(nutrition_response, type = "text", encoding = "ISO-8859-1")
nutrition_response_data <- fromJSON(nutrition_response_text)
calories <- nutrition_response_data$calories$value
fat <- nutrition_response_data$fat$value
protein <- nutrition_response_data$protein$value
carbs <- nutrition_response_data$carbs$value
nutrition_list <- c(calories,fat,protein,carbs)
nutrition_table <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = nutrition_list)
return(nutrition_table)
}
a <- nutrition_table("Spaghetti")
library(shiny)
library(dplyr)
library(ggplot2)
library(plotly)
source("api-keys.R")
library(jsonlite)
library(httr)
library(RColorBrewer)
library(shinyjs)
library(DT)
recipe_uri <- "https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/"
recipe_endpoint <- "findByIngredients"
nutrition_action <- "guessNutrition"
nutrition_endpoint <- paste0(recipe_uri,nutrition_action)
nutrition_table <- function(dish){
nutrition_response <- GET(endpoint,
add_headers("X-RapidAPI-Key" = recipe_key),
query = list(title = dish) )
nutrition_response_text <- content(nutrition_response, type = "text", encoding = "ISO-8859-1")
nutrition_response_data <- fromJSON(nutrition_response_text)
calories <- nutrition_response_data$calories$value
fat <- nutrition_response_data$fat$value
protein <- nutrition_response_data$protein$value
carbs <- nutrition_response_data$carbs$value
nutrition_list <- c(calories,fat,protein,carbs)
nutrition_table <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = nutrition_list)
return(nutrition_table)
}
a <- nutrition_table("Spaghetti")
View(a)
is.dataframe(a)
is.data.frame(a)
a <- nutrition_table("Spaghetti")
b <- nutrition_table("Burger")
View(b)
nutrition_cal <- bind_rows(dish1_cal, dish2_cal)
b <- nutrition_table("Burger")
nutrition_cal <- bind_rows(a, b)
nutrition_table_total <- aggregate(cbind(Value) ~ Nutrition, data=nutrition_cal, FUN=sum)
nutrition_table <- datatable(nutrition_table_total)
View(nutrition_table)
View(nutrition_table_total)
View(nutrition_table)
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dish1_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,1))
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- merge(dish1_cal, dish2_cal)
View(nutrition_cal)
View(dish2_cal)
View(nutrition_cal)
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- cbind(dish1_cal, dish2_cal)
dish1_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,1))
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- cbind(dish1_cal, dish2_cal)
View(nutrition_cal)
dish1_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,1))
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- merge(dish1_cal, dish2_cal, by = Nutrition)
dish1_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,1))
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- merge(dish1_cal, dish2_cal, by = "Nutrition")
View(nutrition_cal)
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- rbind(dish1_cal, dish2_cal)
View(nutrition_cal)
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- merge.data.frame(dish1_cal, dish2_cal, by = "Nutrition")
View(nutrition_cal)
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- merge.data.frame(dish1_cal, dish2_cal, by = "Nutrition")
nutrition_table_total <- aggregate(cbind(Value) ~ Nutrition, data=nutrition_cal, FUN=sum)
View(nutrition_cal)
nutrition_cal <- bind_rows(dish1_cal, dish2_cal)
nutrition_table_total <- aggregate(cbind(Value) ~ Nutrition, data=nutrition_cal, FUN=sum)
View(nutrition_cal)
nutrition_cal <- rbind(dish1_cal, dish2_cal)
View(nutrition_cal)
nutrition_table_total <- aggregate(cbind(Value) ~ Nutrition, data=nutrition_cal, FUN=sum)
View(nutrition_table_total)
dish1_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,1))
dish2_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
dish3_cal <- data.frame(Nutrition = c("Calories", "Fat", "Protein","Carbs"),
Value = c(2,3,4,2))
nutrition_cal <- rbind(dish1_cal, dish2_cal, dish3_cal)
nutrition_table_total <- aggregate(cbind(Value) ~ Nutrition, data=nutrition_cal, FUN=sum)
View(nutrition_cal)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp('~/Desktop/INFO201/project/Final_Project/Info201-Final_Project')
shiny::runApp()
runApp()
runApp()
install.packages("rapport")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(lintr)
lint_package("server.R")
lint("server.R")
shiny::runApp()
runApp()
runApp()
